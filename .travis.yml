language: c

compiler:
  - clang

env:
  global:
    - FOO=foo BAR=bar
  # matrix:
  #   - TEST=test1
  #   - TEST=test2

_anchors:
  homebrew: &homebrew
    addons:
      homebrew:
        brewfile: Brewfile.travis
        update: true

  caches: &cache
    cache:
      directories:
        # - /usr/local/Homebrew/Library/Homebrew/vendor/
        # - /usr/local/Homebrew/Library/Taps/
        - ${TRAVIS_BUILD_DIR}/build

  envs:
    - &myfoo
      MYFOO=myfoo
    - &mybar
      MYBAR=mybar

  linux_script: &linux-script
    - echo $PATH
    - cat /etc/nsswitch.conf || true
    - gcc -o test main.c
    - cat /etc/hosts
    - ./test localhost
    - sudo sort -o /etc/hosts /etc/hosts
    - cat /etc/hosts
    - ./test localhost
    # - find_module() { find "/lib/modules/$(uname -r)" -name "$1.ko" | grep -s .;  }
    # - cat /etc/apt/sources.list
    # - find_module snd-dummy || true
    # - sudo apt update -y >/dev/null 2>&1 || true
    # - sudo apt install -y "linux-modules-extra-$(uname -r)" || true
    # # Check snd-dummy.ko exists ultimately.
    # - find_module snd-dummy || true

  osx_script: &osx-script
    - find /usr/local/Homebrew/Library/Homebrew/vendor -maxdepth 3
    - du -hd1 /usr/local/Homebrew/Library/Homebrew/vendor
    - find /usr/local/Homebrew/Library/Taps -mindepth 2 -maxdepth 2
    - du -hd1 /usr/local/Homebrew/Library/Taps/homebrew
    - ls /usr/local/opt
    - rm -fr build
    - mkdir -p build
    - cc -o build/test main.c
    - ./build/test "hello world"
    - set -e
    - vim_url=$(curl -Ls https://vim-jp.org/redirects/macvim-dev/macvim/latest.json | python -c 'import json,sys; print(json.load(sys.stdin)["redirect_url"])')
    - curl -L -o MacVim.dmg "${vim_url}"
    - hdiutil attach -quiet -mountpoint /Volumes/MacVim MacVim.dmg
    - cp -a /Volumes/MacVim/MacVim.app .
    - hdiutil detach /Volumes/MacVim
    - ./MacVim.app/Contents/MacOS/Vim -u NONE -i NONE -esNX -V1 +'echo &luadll .. ":" .. has("lua")' +q
    - ./MacVim.app/Contents/MacOS/Vim -u NONE -i NONE -esNX -V1 +'echo &pythondll .. ":" .. has("python")' +q
    - ./MacVim.app/Contents/MacOS/Vim -u NONE -i NONE -esNX -V1 +'echo &pythonthreedll .. ":" .. has("python3")' +q
    - ./MacVim.app/Contents/MacOS/Vim -u NONE -i NONE -esNX -V1 +'echo &rubydll .. ":" .. has("ruby")' +q
    - find -L /System/Library/Frameworks/Python.framework -name Python
    - find -L /usr/local/Frameworks/Python.framework -name Python

# before_script:
#   - sudo sed -i '/^127\.0\.1\.1\s/s/localhost//g' /etc/hosts

jobs:
  include:
    - stage: test
      name: Test on Linux - trusty (amd64)
      os: linux
      dist: trusty
      script: *linux-script
    - stage: test
      name: Test on Linux - xenial (amd64)
      os: linux
      dist: xenial
      script: *linux-script
    - stage: test
      name: Test on Linux - bionic (amd64)
      os: linux
      dist: bionic
      script: *linux-script
    # - stage: test
    #   name: Test on Linux - trusty (ppc64le)
    #   os: linux
    #   dist: xenial
    #   arch: ppc64le
    #   script: *linux-script
    # - stage: test
    #   name: Test on Linux - xenial (ppc64le)
    #   os: linux
    #   dist: xenial
    #   arch: ppc64le
    #   script: *linux-script
    - stage: test
      name: Test on Linux - bionic (ppc64le)
      os: linux
      dist: bionic
      arch: ppc64le
      script: *linux-script
    # - stage: test
    #   name: Test on Linux - trusty (s390x)
    #   os: linux
    #   dist: trusty
    #   arch: s390x
    #   script: *linux-script
    # - stage: test
    #   name: Test on Linux - xenial (s390x)
    #   os: linux
    #   dist: xenial
    #   arch: s390x
    #   script: *linux-script
    - stage: test
      name: Test on Linux - bionic (s390x)
      os: linux
      dist: bionic
      arch: s390x
      script: *linux-script
    # - stage: test
    #   name: Test on Linux - trusty (arm64)
    #   os: linux
    #   dist: trusty
    #   arch: arm64
    #   script: *linux-script
    # - stage: test
    #   name: Test on Linux - xenial (arm64)
    #   os: linux
    #   dist: xenial
    #   arch: arm64
    #   script: *linux-script
    - stage: test
      name: Test on Linux - bionic (arm64)
      os: linux
      dist: bionic
      arch: arm64
      script: *linux-script
    # - stage: test
    #   name: Test on El Capitan
    #   os: osx
    #   osx_image: xcode7.3
    #   env:
    #     - *myfoo
    #     - *mybar
    #   script: *osx-script
    #   after_script:
    #     - echo "after_script done"
    # - stage: test
    #   name: Test on Sierra
    #   os: osx
    #   osx_image: xcode8.3
    #   script: *osx-script
    # - stage: test
    #   name: Test on High Sierra
    #   os: osx
    #   osx_image: xcode9.4
    #   script: *osx-script
    # - stage: test
    #   name: Test on Mojave
    #   os: osx
    #   osx_image: xcode11.3
    #   <<: *cache
    #   script: *osx-script
    # - stage: deploy
    #   name: Deployment
    #   os: osx
    #   osx_image: xcode11.3
    #   script: skip
    #   <<: *cache
    #   before_deploy: ls -al *
    #   deploy:
    #     # provider: releases
    #     # api_key:
    #     #   secure: f96CLQZZCYIJ5TY2os6IHHbL2U2Jzx+tgh8+8m3Xsf65WeFNHreLKMYjyVhz70KSx4DrUxs6XpOoBdgmeue/5c+1IvXZkUFt6OL32a8MU07y2dPKAi69RMa/BA4i0wTtDmFKAKGxgT5klM2XOiCjchsiKuji7yDk3zX0RpbKP8cwnpZK+OH2TcOT3P1L+zaGZtlTmgmni3QSZieLQlAoUelYsy3KJmNKM2DF+n9iiOoFeY3OCMizFNKe0XjRkc90xDNcQdHnuzxAb4lPrQK1dy+w7niguiyUHwzu99vHc/ltm/mU/YQi3ZRma7gklj8/xSWArNqd0WfcAZZ+n5f4J5bnBY6gwinVCRYuTETlt+E6xcArUBl0ylRw8ee7JxIn60m2zIxl7LOgZEgijD4VvrFoExN36BE4KkccBqzjr3CFyAQzD0D326cLzmHTbp00IoVZgi8C40BakkQAAw22vI0PKc6jbfo/HIznQhCk9NnByiNtTnjb+UAB6wxxjiEI1DNj1XPEHQtOBvWMthEL3RD5SVbHIm7MiDEcB7U8c6dLZdUC7jYFUKVHJbd43MPgoOU49aMVeZqYX0nlX86lQoh24TY8yR7NPxt9LtuMwQZSNO8++lMW2F0APDwjIa1wXxmLTG4Pan/oQ7VLtffPGm9oi53nZBszpOeubdzDRnU=
    #     # file: 'test'
    #     provider: script
    #     script: echo finish
    #     on:
    #       # condition: $TRAVIS_OSX_IMAGE = xcode10.2
    #       all_branches: true
    #       # tags: true
    #       repo: ichizok/travis-playground
    #
# vim:set sts=2 sw=2 tw=0 et:
