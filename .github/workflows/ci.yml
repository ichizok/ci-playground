name: GitHub CI

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  # trial-gh:
  #   runs-on: ubuntu-latest
  # 
  #   steps:
  #     - name: Show context
  #       run: |
  #         (
  #         echo "github.event_name=${{ github.event_name }}"
  #         echo "${{ toJSON(github.event) }}"
  #         ) || true
  # 
  #     - uses: actions/checkout@v2
  # 
  #     - name: Commit
  #       if: github.ref_name == 'master'
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       run: |
  #         grep -qv hello dir/sample.txt
  #         echo hello >> dir/sample.txt
  #         git config --local user.name 'github-actions[bot]'
  #         git config --local user.email 'github-actions[bot]@users.noreply.github.com'
  #         git switch -c trial/gh
  #         git add dir/sample.txt
  #         git commit -m 'Add message'
  #         git push -u origin trial/gh
  # 
  #     - name: Create pull request
  #       if: github.ref_name == 'master'
  #       id: pull_request
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       run: |
  #         cat << EOT > /tmp/message
  #         ### Test
  # 
  #         * message 1
  #         * message 2
  #         EOT
  #         gh pr create --base master --title 'trial: Add message' --body-file /tmp/message | tee /tmp/pull_request
  #         echo "::set-output name=url::$(cat /tmp/pull_request)"
  # 
  #     - name: Merge pull request
  #       if: github.ref_name == 'master'
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       run: |
  #         gh pr merge ${{ steps.pull_request.outputs.url }} --auto --merge --delete-branch

  prepare:
    runs-on: ubuntu-latest

    outputs:
      env: ${{ toJSON(env) }}
      matrix: ${{ toJSON(matrix) }}

    env:
      VERSION: v1.0
      URL: https://github.com/

    strategy:
      fail-fast: false
      matrix:
        compiler:
          - clang
          - gcc
        arch:
          - x86_64
          - arm64
          - dummy
        include:
          - compiler: gcc
            arch: powerpc
        exclude:
          - compiler: gcc
            arch: arm64

    steps:
      - name: Prepare
        run: |
          ${{ matrix.arch != 'dummy' }} \
            && echo "${{ matrix.compiler }},${{ matrix.arch }}" > artifact-${{ matrix.compiler }}-${{ matrix.arch }}.txt

      - uses: actions/upload-artifact@v2
        with:
          name: artifact-${{ matrix.compiler }}-${{ matrix.arch }}
          path: artifact-${{ matrix.compiler }}-${{ matrix.arch }}.txt

  trial:
    needs: prepare

    if: always()

    runs-on: ubuntu-latest

    env: ${{ fromJSON(needs.prepare.outputs.env) }}

    strategy:
      fail-fast: true
      matrix: ${{ fromJSON(needs.prepare.outputs.matrix) }}

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact-${{ matrix.compiler }}-${{ matrix.arch }}

      - name: Trial
        run: cat artifact-${{ matrix.compiler }}-${{ matrix.arch }}.txt

  cleanup:
    needs: trial

    if: always()

    runs-on: ubuntu-latest

    steps:
      - name: Delete artifacts
        run: |
          curl -s -H "Accept: application/vnd.github.v3+json" \
            ${{ github.api_url }}/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts \
            | jq -r '.artifacts[].id' \
            | xargs -I{} \
              curl -s -X DELETE -H "Accept: application/vnd.github.v3+json" \
                ${{ github.api_url }}/repos/${{ github.repository }}/actions//artifacts/{} \
